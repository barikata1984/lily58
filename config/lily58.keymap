/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        COMBO_BT_CLR {
            bindings = <&bt BT_CLR>;
            key-positions = <53 28 31 54>;
            layers = <1>;
        };

        BT_SEL_0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <53 54 13>;
            timeout-ms = <500>;
            layers = <1>;
        };

        BT_SEL_1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <53 14 54>;
            timeout-ms = <500>;
            layers = <1>;
        };

        BT_SEL_2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <53 15 54>;
            timeout-ms = <500>;
            layers = <1>;
        };

        BT_SEL_3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <53 16 54>;
            timeout-ms = <500>;
            layers = <1>;
        };

        BT_SEL_4 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <53 17 54>;
            timeout-ms = <500>;
            layers = <1>;
        };

        MUTE {
            bindings = <&kp C_MUTE>;
            key-positions = <46 47>;
            timeout-ms = <25>;
            layers = <2>;
        };

        COMBO_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
            timeout-ms = <25>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
            timeout-ms = <25>;
        };
    };

    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmv_t: mmv_t {
            compatible = "zmk,behavior-hold-tap";
            label = "MMV_T";
            bindings = <&mmv>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
        };
    };

    macros {
        double_zero: double_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_0>;
            label = "DOUBLE_ZERO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "default";
            bindings = <
&trans  &trans              &trans          &trans     &trans            &trans                                    &trans     &trans             &trans     &trans      &trans                       &trans
&trans  &kp Q               &kp W           &kp E      &kp R             &kp T                                     &kp Y      &kp U              &kp I      &kp O       &kp P                        &trans
&trans  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt TAB D  &mt LEFT_SHIFT F  &kp G                                     &kp H      &mt RIGHT_SHIFT J  &mt TAB K  &mt RALT L  &mt RIGHT_CONTROL SEMICOLON  &trans
&trans  &kp Z               &kp X           &kp C      &kp V             &kp B         &trans         &trans       &kp N      &kp M              &kp COMMA  &kp DOT     &kp SLASH                    &trans
                                            &trans     &kp LGUI          &kp LEFT_ALT  &lt 1 SPACE    &lt 2 ENTER  &bspc_del  &kp ESCAPE         &trans
            >;
        };

        Numeric {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "numeric";
            bindings = <
&trans  &trans            &trans        &trans   &trans          &trans                                 &trans             &trans           &trans     &trans         &trans             &trans
&trans  &kp N1            &kp N2        &kp N3   &kp N4          &kp N5                                 &kp N6             &kp N7           &kp N8     &kp N9         &kp N0             &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp TAB  &kp LEFT_SHIFT  &kp LEFT_BRACKET                       &kp RIGHT_BRACKET  &kp RIGHT_SHIFT  &kp TAB    &kp RIGHT_ALT  &kp RIGHT_CONTROL  &trans
&trans  &kp GRAVE         &trans        &trans   &trans          &trans            &trans    &trans     &trans             &kp MINUS        &kp EQUAL  &kp BACKSLASH  &kp DOUBLE_QUOTES  &trans
                                        &trans   &kp LGUI        &kp LEFT_ALT      &trans    &kp ENTER  &bspc_del          &kp ESCAPE       &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans   &trans   &trans             &trans            &trans                          &trans         &trans        &trans        &trans            &trans     &trans
&trans  &kp F1   &kp F2   &kp F3             &kp F4            &kp F5                          &kp C_AC_BACK  &kp PG_DN     &kp PG_UP     &kp C_AC_FORWARD  &kp PSCRN  &trans
&trans  &kp F6   &kp F7   &kp F8             &kp F9            &kp F10                         &kp LEFT       &kp DOWN      &kp UP        &kp RIGHT         &kp HOME   &trans
&trans  &kp F11  &kp F12  &kp C_AC_ZOOM_OUT  &kp C_AC_ZOOM_IN  &trans        &trans    &trans  &mkp LCLK      &kp C_VOL_DN  &kp C_VOL_UP  &mkp RCLK         &kp END    &trans
                          &trans             &kp LEFT_GUI      &kp LEFT_ALT  &mo 3     &trans  &kp C_PP       &mkp MCLK     &trans
            >;

            label = "function";
        };

        Cursor {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans                 &trans                 &trans                   &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans                 &trans                 &trans                   &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &kp T   &trans                    &mmv_t MOVE_LEFT DOWN  &mmv_t MOVE_DOWN DOWN  &mmv_t MOVE_UP UP_ARROW  &mmv_t MOVE_RIGHT RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                 &trans                 &trans                   &trans                   &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans                 &trans                 &trans
            >;
        };
    };
};
